import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { cookies } from "next/headers";

import QueryProvider from "@components/QueryProvider";
import RouterTransition from "@components/RouterTransition";
import { MantineProvider } from "@mantine/core";
import "@mantine/core/styles.css";
import "@mantine/dropzone/styles.css";
import { ModalsProvider } from "@mantine/modals";
import { Notifications } from "@mantine/notifications";
import "@mantine/notifications/styles.css";
import "@mantine/nprogress/styles.css";

import DictionaryProvider from "@/app/components/context/Dictionary";
import Navbar from "@/app/components/navbar/Navbar";
import "@/app/globals.css";

import { getDictionary } from "../messages";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Digidine",
  description: "Generated by create next app",
};

export default async function DashBoardLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: "en" | "hd" | "sp" }>;
}>) {
  const theme = (await cookies()).get("theme");
  const locale = (await params).locale;
  const dictionary = await getDictionary(locale);

  return (
    <html lang={(await params).locale} className={`${theme?.value}`}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} bg-backgroundColor `}
      >
        <QueryProvider>
          <MantineProvider defaultColorScheme="auto">
            <ModalsProvider>
              <RouterTransition />
              <Notifications position="top-right" />
              <DictionaryProvider value={dictionary}>
                <Navbar />
              </DictionaryProvider>
              {children}
            </ModalsProvider>
          </MantineProvider>
        </QueryProvider>
      </body>
    </html>
  );
}
